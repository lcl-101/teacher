each(循环次数,function(){功能})


JavaScript 内置 顶层 函数
escape()  非字母、非数字 非字符进行编码   机器码
unecape()  对编码的字符串进行解码

Number()   把值强制转换成数值
 1.boolean类型 true 1   false  0
 2.undefined   NaN （not a number） 
 3.null   转换成 0
 4. number   忽略前导000123 后导 123.0000 
 5. string
    (1)纯字符串   NaN
    (2)字符串开头后面跟数字  NaN
    (3)数字开头 后面 字符串  NaN
    (4)数值类型字符串  "123"  忽略前导000123 后导 123.0000 
    (5)"" 空字符串     0


parseInt()   把字符串转换成 整型
字符串 ：

  1.全字符串    NaN
  2.以数值开头 后跟字符串 
    向后去找 直到非数字的值 停止    100ab123
    数值类型为浮点数   省略小数点后面的值  
  3.字符串开头 后跟数值  NaN
  4.数值类型字符串   整数"100" 转换成 整数  100
                     浮点数  把小数点后面值 省略
                     "190.23213"           190
  5.""        NaN


parseInt(参数1,[参数2])

如果传1个参数   字符串
如果传2个参数    
   参数1  传进制数   八进制 0 后面跟不超过8的数
                     十进制   正常
                     十六进制  0x  后面 0-9a-f

   参数2 传递 进制数2 -32        2   16 10
   

参数1  "10" ,2   2  参照 参数2 进制规则输出结果10进制
       "a",16    10
       "7" ,8  7 

       'fa',16

parseFloat()    把字符串转换成浮点数


转换成字符串   String()

  "undefined"
   "null"
   "true"  "false"
   "100"
  "123123"
   "function aa(){}"



隐式数据类型转换
1.算数运算符
  - * /  %  
  如果操作数 不是数值  隐式的调用Number()去转换  
  如果可以   正常去运算
  如果NaN  运算符结果  NaN
   +
  如果操作数 有一个是字符串话， 返回结果 拼接之后的结果
  10+"123"  ="10123"

2.关系运算符
  >= >  <= <  
   1》比较运算符 返回的结果是boolean值true false
   2》两个数值会正常比较大小(数学)
   3》如果两个字符串比较大小 
  从第一个开始进行比较 ASCII的大小： 
  相同  继续比较第二个 ... 直到得到结果
  不同  直接返回结果 ，不在比较
   4》一个是字符串  一个是数值  ( 调用 Number() )
     "aabs">10    字符串纯字母 不能比较大小 直接返回false
      '10'<20  比较大小的时候数据类型不同 隐式数据类型转换  Number
       如果字符串 "aa"  转换出来 NaN不是一个数字
       如果字符串 "10"  转换成对应数值
       如果字符串 "10a" 不能转换 NaN
       如果字符串 ""     转换成 0

     undefined  转换成 NaN
     null       转换成 0   

     true   转换成1
     false   转换成0  


  == !=  
  


  ===  !==


逻辑运算符 

10 && ""
逻辑运算符可以对任何类型的数据进行运算但是在运算的时候，可以转换为对应的布尔值  Boolean()  
   undefined   false
   null        false
   boolean     true   false
   number      除了0为false  其他都为true
   string      '' false   其他都为true
     
   object       true 

语句类
"a">10  Number();
if(10){  Boolean()

}else{

}

while(a){

}
while("a">10){


}


三元表达式

 表达式？
"a">10？成立 : 不成立 

a



