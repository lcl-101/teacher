1.运算符
  1)算数运算符
   + - * /  %  ++  --

   a.   +
     1.数学加法运算
       var a=10;
       var b=20;
       var c=a+b;  //30
     2.字符串的连接
       var str1='shanxi';
       var str2="taiyuan";
       var str3=str1+str2; //shanxitaiyuan
   b.  -
   c.   *
   d.   /
   e.   %   取一段范围的数据   
     通常我们用来判断 奇偶数
      var  num=10;
      if(){
           
      }else{

      }
   f: ++  自增   -- 自减
    num=10;     
    ++num    等于  num=num+1   
    num++   等于  num=num  num=num+1
    
    --num    等于  num=num-1   
    num--   等于  num=num  num=num-1

    () 无论有没有 遵循 自增    自减 的规则
 

    ++  在前 先运算  后执行
        在后  先执行  后运算
    --  在前 先运算  后执行
        在后  先执行  后运算
   
 2.关系运算符（比较运算符）
   >   <  >= <=      ==  !=  ===    !==
   1》比较运算符 返回的结果是boolean值true false
   2》两个数值会正常比较大小(数学)
   3》如果两个字符串比较大小 
  从第一个开始进行比较 ASCII的大小： 
  相同  继续比较第二个 ... 直到得到结果
  不同  直接返回结果 ，不在比较
   4》一个是字符串  一个是数值
     "aabs">10    字符串纯字母 不能比较大小 直接返回false
      '10'<20  比较大小的时候数据类型不同 隐式数据类型转换  Number
       如果字符串 "aa"  转换出来 NaN不是一个数字
       如果字符串 "10"  转换成对应数值
       如果字符串 "10a" 不能转换 NaN
       如果字符串 ""     转换成 0

     undefined  转换成 NaN
     null       转换成 0   

     true   转换成1
     false   转换成0    

   ==   等于   判断 值是不是相等 
   !=   不等于  
      null==undefined   ture
      两个都是字符串  比较ASCII码
      两个数值       正常比较
      两个引用类型    比较地址是不是相同
   ===  全等 不仅比较值的大小还比较 数据类型
   !==

3）赋值运算符
  += -=  *=  /= %=

   // var num=10;
   // num+=1; //num=num+1   1
   // alert(num)
   var str="www";
   str+=".baidu.com";//str='www'+'.baidu.com'
   写法简洁、执行效率高

4）逻辑运算符
   &&    ||   !
   

   &&  两边表达式都为真  则返回结果为真
   &&  只要有一个为假   整个表达式返回假
       短路：左边表达式为假不判断右边表达式 直接返回为假
   &&  两边表达式都为假    则返回假

   ||  只要有一个为真   返回结果为真
       短路: 左边表达式为真不判断右边表达式  直接返回为真
   

    !    把真的变成假的   把假的变成真的



赋值  有条件的赋值

var aa;
var bb=aa||100;
       
   逻辑运算符可以对任何类型的数据进行运算但是在运算的时候，可以转换为对应的布尔值  Boolean()  
   undefined   false
   null        false
   boolean     true   false
   number      除了0为false  其他都为true
   string      '' false   其他都为true
     
   object       true 
  
5）一元运算符   
typeof  检测变量的数据类型  typeof 变量   typeof()
+    
-
delete   删除对象的一个属性或者方法
new      创建对象
++    
--

6）三元运算符

    表达式? 成立 : 不成立

   if(表达式){
       成立
    }else{
       不成立
    }

    var a=100;
    var b=200;
    
    var c=a>b?a:b;




















    